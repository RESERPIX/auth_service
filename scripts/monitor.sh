#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ auth_service
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/monitor.sh [interval]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30 —Å–µ–∫—É–Ω–¥)
INTERVAL=${1:-30}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
check_service() {
    local service_name=$1
    local command=$2
    
    if pgrep -f "$command" > /dev/null; then
        echo -e "${GREEN}‚úì${NC} $service_name –∑–∞–ø—É—â–µ–Ω"
        return 0
    else
        echo -e "${RED}‚úó${NC} $service_name –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤
check_port() {
    local port=$1
    local service=$2
    
    if netstat -tuln 2>/dev/null | grep ":$port " > /dev/null; then
        echo -e "${GREEN}‚úì${NC} $service —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É $port"
        return 0
    else
        echo -e "${RED}‚úó${NC} $service –Ω–µ —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É $port"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
check_database() {
    if pg_isready -h localhost -p 5432 > /dev/null 2>&1; then
        echo -e "${GREEN}‚úì${NC} PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        echo -e "${RED}‚úó${NC} PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Redis
check_redis() {
    if redis-cli ping > /dev/null 2>&1; then
        echo -e "${GREEN}‚úì${NC} Redis –¥–æ—Å—Ç—É–ø–µ–Ω"
        return 0
    else
        echo -e "${RED}‚úó${NC} Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
check_resources() {
    echo -e "${BLUE}üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
    
    # CPU
    cpu_usage=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)
    echo -e "  CPU: ${YELLOW}${cpu_usage}%${NC}"
    
    # –ü–∞–º—è—Ç—å
    memory_info=$(free -m | grep Mem)
    total_mem=$(echo $memory_info | awk '{print $2}')
    used_mem=$(echo $memory_info | awk '{print $3}')
    mem_usage=$((used_mem * 100 / total_mem))
    echo -e "  –ü–∞–º—è—Ç—å: ${YELLOW}${mem_usage}%${NC} (${used_mem}MB / ${total_mem}MB)"
    
    # –î–∏—Å–∫
    disk_usage=$(df -h / | tail -1 | awk '{print $5}' | cut -d'%' -f1)
    echo -e "  –î–∏—Å–∫: ${YELLOW}${disk_usage}%${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤
check_logs() {
    echo -e "${BLUE}üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:${NC}"
    
    if [ -f "auth.log" ]; then
        tail -5 auth.log | while read line; do
            if echo "$line" | grep -q "ERROR\|FATAL"; then
                echo -e "  ${RED}$line${NC}"
            elif echo "$line" | grep -q "WARN"; then
                echo -e "  ${YELLOW}$line${NC}"
            else
                echo -e "  $line"
            fi
        done
    else
        echo -e "  ${YELLOW}–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
main() {
    log "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ auth_service${NC}"
    log "–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: ${INTERVAL} —Å–µ–∫—É–Ω–¥"
    echo
    
    while true; do
        echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
        echo
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
        check_service "Auth Service" "auth"
        check_service "PostgreSQL" "postgres"
        check_service "Redis" "redis"
        echo
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
        check_port 50051 "gRPC Server"
        check_port 5432 "PostgreSQL"
        check_port 6379 "Redis"
        echo
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
        check_database
        check_redis
        echo
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
        check_resources
        echo
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
        check_logs
        echo
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        echo "----------------------------------------"
        echo
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        sleep $INTERVAL
    done
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'log "${YELLOW}‚ö†Ô∏è  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"; exit 0' INT TERM

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
